/**
 * Do not edit this file
 */

//
#include "my_functions.hpp"
#include "puhp-tests/PuhPTests.hpp"


//
using std::cout, std::cin, std::endl;


//
using
	PuhPTests::Tests,
	PuhPTests::Test,
	PuhPTests::OutputCapture
	;


//
void preventPrototypeTampering()
{
	//
	int (*a)(void) = hello_world;
	if (a) {}
}


//
void testHello(Tests& tests)
{
	//
	auto t = tests.createTest("Hello");
	
	//
	t->setFixedPointsPossible(3);
	t->setNormalizedPointsPossibleTarget(10);
	
	//
	t->assertNoException(
		[t]()
		{
			//
			std::string hello_output;
			int hello_result;
			{
				OutputCapture cap;
				hello_result = hello_world();
				hello_output = cap.getStdout();
			}
			
			//
			t->assertEqual(hello_result, 23, 1, "Checking that hello_world returns the right value.");
			t->assertEqual(hello_output, "Hello, world!", 1, "Checking that hello_world prints the correct output, using cout.");
			
		}, 1, "Hello World"
	);
}

//
int main()
{
	//
	Tests tests(10);
	
	//
	preventPrototypeTampering();
	
	//
	std::vector<std::function<void(Tests&)>> fs = {
		testHello,
	};
	
	//
	for ( auto f : fs ) {
		f(tests);
	}
	
	//
	tests.setResultsFileName("results-cpp.json");
	tests.run();
	
	//
	cout << "Tests complete" << endl;
	
	return 0;
}


